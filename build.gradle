plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

configurations {
    // config 추가
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

group = 'com.babyblackdog'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file("build/generated-snippets")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.commons:commons-lang3:3.0'
    testImplementation 'junit:junit:4.13.1'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExtensions "org.springframework.restdocs:spring-restdocs-asciidoctor"

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT
    implementation 'com.auth0:java-jwt:4.4.0'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    dependsOn test
    // config 추가
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir

    // 변환할 adoc들을 명시한다.
    sources{
        include("**/*.adoc")
    }

    // include 연산을 사용할 때 base 디렉터리를 지정해줍니다.
    baseDirFollowsSourceFile()
}

//기존에 존재하는 docs 삭제
asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

// build/docs/asciidocs 파일을 src/main/resources/static/docs로 복사
tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}
